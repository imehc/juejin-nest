version: '3.8'
services:
  mysql-container:
    container_name: mysql-container
    image: mysql
    # 本地映射 具体本地地址以主机路径为准
    volumes:
      - /Users/tom/person/learning/mysql-data:/var/lib/mysql
    # 启动时执行的命令
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci # 设置默认字符集
    environment:
      MYSQL_DATABASE: meeting_room_booking_system
      MYSQL_ROOT_PASSWORD: admin
    # ports:
    #   - '3306:3306'
    restart: always
    networks:
      - common-network

  redis-container:
    container_name: redis-container
    image: redis
    # 本地映射 具体本地地址以主机路径为准
    volumes:
      - /Users/tom/person/learning/redis-data:/data
    # ports:
    #   - '6379:6379'
    restart: always
    networks:
      - common-network

  minio-container:
    container_name: minio-container
    image: "bitnami/minio:latest"
    ports:
      # - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin # 账号必须大于等于5位
      - MINIO_ROOT_PASSWORD=12345678 # 密码必须大于等于8位
    volumes:
      - /Users/tom/person/learning/minio-data:/bitnami/minio/data
    restart: always
    networks:
      - common-network

  nest-api:
    container_name: nest-api
    build:
      context: ./meeting_room_booking_system_backend
      dockerfile: ./Dockerfile
    depends_on:
      - mysql-container
      - redis-container
      - minio-container
    # ports:
    #   - 6020:6020
    # 本地映射 具体本地地址以主机路径为准 一般文件使用OSS对象存储，这里图片存放到主机
    environment:
      - NODE_ENVIRONMENT=production
    volumes:
      - /Users/tom/person/learning/uploads:/uploads
    restart: always
    networks:
      - common-network

  next-client:
    container_name: next-client
    build:
      context: .
      dockerfile: ./meeting_room_booking_system_frontend/Dockerfile
    depends_on:
      - nest-api
    # ports:
    #   - 6022:6022
    restart: always
    networks:
      - common-network

  nginx:
    # 容器名称
    container_name: nginx-proxy
    image: nginx:alpine
    depends_on:
      - nest-api
      - next-client
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    restart: always
    networks:
      - common-network

# 需要保证容器网络处于同一网络，否则容器之间无法访问
networks:
  common-network:
    driver: bridge
