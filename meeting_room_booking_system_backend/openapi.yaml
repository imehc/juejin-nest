openapi: 3.0.0
paths:
  /user/check-token-expiration:
    get:
      description: 验证token是否有效
      operationId: check-token-expiration
      parameters:
        - name: token
          required: true
          in: query
          description: token
          schema:
            type: string
      responses:
        '200':
          description: 验证通过
          content:
            application/json:
              schema:
                type: string
        '500':
          description: 验证不通过
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - auth
  /user/register-captcha:
    get:
      description: 获取注册验证码
      operationId: register-captcha
      parameters:
        - name: address
          required: true
          in: query
          description: 邮箱地址
          schema:
            example: xxx@xx.com
            type: string
      responses:
        '200':
          description: 发送成功
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 邮箱已存在
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - captcha
  /user/forgot-password-captcha:
    get:
      description: 获取找回密码验证码
      operationId: fotgot-captcha
      parameters:
        - name: address
          required: true
          in: query
          description: 邮箱地址
          schema:
            example: xxx@xx.com
            type: string
      responses:
        '200':
          description: 发送成功
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - captcha
  /user/update-password/captcha:
    get:
      description: 获取更改密码验证码
      operationId: update-password-captcha
      parameters: []
      responses:
        '200':
          description: 发送成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - captcha
  /user/update/captcha:
    get:
      description: 获取更新用户信息验证码
      operationId: update-user-info-captcha
      parameters: []
      responses:
        '200':
          description: 发送成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - captcha
  /user/register:
    post:
      description: 注册用户
      operationId: user-register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
      responses:
        '200':
          description: 注册成功
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 验证码已失效/验证码不正确/用户已存在
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - user
  /user/login:
    post:
      description: 普通用户登录
      operationId: user-login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        '200':
          description: 用户信息和token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserVo'
        '400':
          description: 用户不存在/密码错误
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - user
  /user/admin/login:
    post:
      description: 管理员登录
      operationId: system-login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
      responses:
        '200':
          description: 用户信息和token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserVo'
        '400':
          description: 用户不存在/密码错误
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - user
        - system
  /user/refresh:
    get:
      description: 使用refreshToken换取新token
      operationId: refresh-token
      parameters:
        - name: refreshToken
          required: true
          in: query
          description: 刷新token
          schema:
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
            type: string
      responses:
        '200':
          description: 刷新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '401':
          description: token 已失效，请重新登录
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - auth
  /user/info:
    get:
      description: 获取用户/管理员信息
      operationId: get-user-info
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserDetailVo'
                  - $ref: '#/components/schemas/UserInfo'
                discriminator:
                  propertyName: type
                  mapping:
                    system: UserInfo
                    normal: UserDetailVo
          description: ''
      security:
        - bearer: []
      summary: ''
      tags:
        - user
        - system
  /user/forgot-password:
    post:
      description: 用户忘记密码
      operationId: forgot-password
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotUserPasswordDto'
      responses:
        '200':
          description: 找回密码成功
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 验证码已失效/不正确
          content:
            application/json:
              schema:
                type: string
      summary: ''
      tags:
        - user
  /user/update-password:
    post:
      description: 用户/管理员更新密码
      operationId: update-password
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPasswordDto'
      responses:
        '200':
          description: 用户/管理员更新密码
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 验证码已失效/不正确
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - user
        - system
  /user/update:
    post:
      description: 用户/管理员更新用户/管理员信息
      operationId: update-user-info
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: string
        '400':
          description: 验证码不正确/已失效
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - user
        - system
  /user/freeze/{id}:
    put:
      description: 冻结用户
      operationId: freeze-user
      parameters:
        - name: id
          required: true
          in: path
          description: 冻结用户的用户ID
          schema:
            type: number
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - system
  /user/list:
    get:
      description: 用户列表
      operationId: get-user-list
      parameters:
        - name: skip
          required: true
          in: query
          description: 第几页
          schema:
            type: number
        - name: limit
          required: true
          in: query
          description: 每页多少条
          schema:
            type: number
        - name: username
          required: false
          in: query
          description: 用户名
          schema:
            type: string
        - name: nickName
          required: false
          in: query
          description: 昵称
          schema:
            type: string
        - name: email
          required: false
          in: query
          description: 邮箱地址
          schema:
            type: string
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListVo'
      security:
        - bearer: []
      summary: ''
      tags:
        - user
  /user/upload:
    post:
      deprecated: true
      description: 上传图片
      operationId: uploadPicture
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - file
  /meeting-room:
    get:
      description: 会议室列表
      operationId: find-all-metting-room
      parameters:
        - name: skip
          required: true
          in: query
          description: 第几页
          schema:
            type: number
        - name: limit
          required: true
          in: query
          description: 每页多少条
          schema:
            type: number
        - name: name
          required: false
          in: query
          description: 会议室名称
          schema:
            type: string
        - name: capacity
          required: false
          in: query
          description: 会议室容量
          schema:
            type: number
        - name: equipment
          required: false
          in: query
          description: 设备
          schema:
            type: string
      responses:
        '200':
          description: 会议室列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoomList'
      security:
        - bearer: []
      summary: ''
      tags:
        - meeting-room
    post:
      description: 会议室创建
      operationId: create-meeting-room
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingRoomDto'
      responses:
        '201':
          description: 会议室创建成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - meeting-room
  /meeting-room/{meetingRoomId}:
    get:
      description: 会议室详情
      operationId: find-one-meeting-room
      parameters:
        - name: meetingRoomId
          required: true
          in: path
          description: 会议室id
          schema:
            type: number
      responses:
        '200':
          description: 查找会议室详情成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoom'
      security:
        - bearer: []
      summary: ''
      tags:
        - meeting-room
    patch:
      description: 会议室更新
      operationId: update-meeting-room
      parameters:
        - name: meetingRoomId
          required: true
          in: path
          description: 会议室id
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingRoomDto'
      responses:
        '200':
          description: 会议室更新成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - meeting-room
    delete:
      description: 删除会议室
      operationId: del-meeting-room
      parameters:
        - name: meetingRoomId
          required: true
          in: path
          description: 会议室id
          schema:
            type: number
      responses:
        '204':
          description: 删除会议室成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - meeting-room
  /booking:
    get:
      description: 预订列表
      operationId: find-all-booking
      parameters:
        - name: skip
          required: true
          in: query
          description: 第几页
          schema:
            type: number
        - name: limit
          required: true
          in: query
          description: 每页多少条
          schema:
            type: number
        - name: name
          required: false
          in: query
          description: 会议室名称
          schema:
            type: string
        - name: username
          required: false
          in: query
          description: 预定人
          schema:
            type: string
        - name: location
          required: false
          in: query
          description: 会议室预定地址
          schema:
            type: string
        - name: status
          required: false
          in: query
          description: 审核状态
          schema:
            enum:
              - apply
              - pass
              - reject
              - unbind
            type: string
        - name: startAt
          required: false
          in: query
          description: 开始时间
          schema:
            format: date-time
            type: string
        - name: endAt
          required: false
          in: query
          description: 结束时间
          schema:
            format: date-time
            type: string
      responses:
        '200':
          description: 预订列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
    post:
      description: 申请预订
      operationId: create-booking
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookingDto'
      responses:
        '201':
          description: 申请预订成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
  /booking/{bookingId}/pass:
    patch:
      description: 审批通过
      operationId: pass-booking
      parameters:
        - name: bookingId
          required: true
          in: path
          description: 预定id
          schema:
            type: number
      responses:
        '201':
          description: 审批通过成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
  /booking/{bookingId}/reject:
    patch:
      description: 审批驳回
      operationId: reject-booking
      parameters:
        - name: bookingId
          required: true
          in: path
          description: 预定id
          schema:
            type: number
      responses:
        '201':
          description: 审批驳回成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
  /booking/{bookingId}/unbind:
    patch:
      description: 审批解除
      operationId: unbind-booking
      parameters:
        - name: bookingId
          required: true
          in: path
          description: 预定id
          schema:
            type: number
      responses:
        '201':
          description: 审批解除成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
  /booking/{bookingId}/urge:
    get:
      description: 催办
      operationId: urge-booking
      parameters:
        - name: bookingId
          required: true
          in: path
          description: 预定id
          schema:
            type: number
      responses:
        '201':
          description: 催办成功
          content:
            application/json:
              schema:
                type: string
      security:
        - bearer: []
      summary: ''
      tags:
        - booking
  /statistic/user-booking-count:
    get:
      description: 用户预定次数统计
      operationId: find-user-booking-count
      parameters:
        - name: startAt
          required: false
          in: query
          description: 开始时间(默认最近10天)
          schema:
            format: date-time
            type: string
        - name: endAt
          required: false
          in: query
          description: 结束时间(默认最近10天)
          schema:
            format: date-time
            type: string
      responses:
        '200':
          description: 用户预定次数
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatisticCountVo'
      security:
        - bearer: []
      summary: ''
      tags:
        - statistic
  /statistic/meeting-room-used-count:
    get:
      description: 会议室使用次数统计
      operationId: find-meeting-room-used-count
      parameters:
        - name: startAt
          required: false
          in: query
          description: 开始时间(默认最近10天)
          schema:
            format: date-time
            type: string
        - name: endAt
          required: false
          in: query
          description: 结束时间(默认最近10天)
          schema:
            format: date-time
            type: string
      responses:
        '200':
          description: 会议室使用统计
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatisticCountVo'
      security:
        - bearer: []
      summary: ''
      tags:
        - statistic
  /minio/presigned-url:
    get:
      description: 上传文件到OSS
      operationId: get-presigned-url
      parameters: []
      responses:
        '200':
          description: 预设上传链接
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrlVo'
      security:
        - bearer: []
      summary: ''
      tags:
        - file
info:
  title: 会议室预订系统
  description: api 接口文档
  version: '1.0'
  contact: {}
tags:
  - name: auth
    description: 权限
  - name: user
    description: 用户
  - name: system
    description: 管理员
  - name: captcha
    description: 验证码
  - name: meeting-room
    description: 会议室
  - name: booking
    description: 预定
  - name: statistic
    description: 统计
  - name: file
    description: 文件
servers:
  - url: http://127.0.0.1:6020
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: 基于jwt的认证
  schemas:
    RegisterUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        nickName:
          type: string
        email:
          type: string
        captcha:
          type: number
      required:
        - username
        - password
        - nickName
        - email
        - captcha
    LoginUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    Permission:
      type: object
      properties:
        id:
          type: number
        code:
          type: string
          example: ccc
        description:
          type: string
          example: 访问 ccc 接口
      required:
        - id
        - code
        - description
    UserInfo:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
          example: zhangsan
        nickName:
          type: string
          example: 张三
        email:
          type: string
          example: xx@xx.com
        headPic:
          type: string
          example: xxx.png
        phoneNumber:
          type: string
          example: '13233333333'
        isFrozen:
          type: boolean
        isAdmin:
          type: boolean
        createAt:
          format: date-time
          type: string
        roles:
          example:
            - 管理员
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - id
        - username
        - nickName
        - email
        - headPic
        - phoneNumber
        - isFrozen
        - isAdmin
        - createAt
        - roles
        - permissions
    Auth:
      type: object
      properties:
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
        refreshToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        expiresIn:
          type: number
          example: '1800000'
      required:
        - accessToken
        - refreshToken
        - expiresIn
    LoginUserVo:
      type: object
      properties:
        userInfo:
          deprecated: true
          description: 用户信息
          allOf:
            - $ref: '#/components/schemas/UserInfo'
        auth:
          $ref: '#/components/schemas/Auth'
      required:
        - userInfo
        - auth
    UserDetailVo:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        nickName:
          type: string
        email:
          type: string
        headPic:
          type: string
        phoneNumber:
          type: string
        isFrozen:
          type: boolean
        createAt:
          format: date-time
          type: string
        isAdmin:
          type: boolean
      required:
        - id
        - username
        - email
        - phoneNumber
        - isFrozen
        - createAt
    ForgotUserPasswordDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        captcha:
          type: number
      required:
        - username
        - password
        - email
        - captcha
    UpdateUserPasswordDto:
      type: object
      properties:
        password:
          type: string
        captcha:
          type: number
      required:
        - password
        - captcha
    UpdateUserDto:
      type: object
      properties:
        captcha:
          type: number
        headPic:
          type: string
        nickName:
          type: string
      required:
        - captcha
    User:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        nickName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        isFrozen:
          type: boolean
        headPic:
          type: string
        createAt:
          format: date-time
          type: string
      required:
        - id
        - username
        - nickName
        - email
        - phoneNumber
        - isFrozen
        - headPic
        - createAt
    UserListVo:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        totalCount:
          type: number
      required:
        - users
        - totalCount
    MeetingRoom:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        capacity:
          type: number
        location:
          type: string
        equipment:
          type: string
        description:
          type: string
        isBooked:
          type: boolean
        createAt:
          format: date-time
          type: string
        updateAt:
          format: date-time
          type: string
      required:
        - id
        - name
        - capacity
        - location
        - isBooked
        - createAt
        - updateAt
    MeetingRoomList:
      type: object
      properties:
        meetingRooms:
          type: array
          items:
            $ref: '#/components/schemas/MeetingRoom'
        totalCount:
          type: number
      required:
        - meetingRooms
        - totalCount
    CreateMeetingRoomDto:
      type: object
      properties:
        name:
          type: string
        capacity:
          type: number
        location:
          type: string
        equipment:
          type: string
        description:
          type: string
      required:
        - name
        - capacity
        - location
    UpdateMeetingRoomDto:
      type: object
      properties:
        name:
          type: string
        capacity:
          type: number
        location:
          type: string
        equipment:
          type: string
        description:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: number
        startAt:
          format: date-time
          type: string
        endAt:
          format: date-time
          type: string
        status:
          type: string
          enum:
            - apply
            - pass
            - reject
            - unbind
          default: apply
          description: 审核状态
        remark:
          type: string
        user:
          $ref: '#/components/schemas/User'
        room:
          $ref: '#/components/schemas/MeetingRoom'
        createAt:
          format: date-time
          type: string
        updateAt:
          format: date-time
          type: string
      required:
        - id
        - startAt
        - endAt
        - status
        - remark
        - user
        - room
        - createAt
        - updateAt
    BookingList:
      type: object
      properties:
        bookings:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
        totalCount:
          type: number
      required:
        - bookings
        - totalCount
    CreateBookingDto:
      type: object
      properties:
        meetingRoomId:
          type: number
          description: 会议室ID
        startAt:
          format: date-time
          type: string
          description: 开始时间
        endAt:
          format: date-time
          type: string
          description: 结束时间
        remark:
          type: string
          description: 备注
      required:
        - meetingRoomId
        - startAt
        - endAt
    StatisticCountVo:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        count:
          type: number
          description: 次数
      required:
        - id
        - name
        - count
    PresignedUrlVo:
      type: object
      properties:
        presignedPutUrl:
          type: string
      required:
        - presignedPutUrl
